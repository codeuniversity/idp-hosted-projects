name: "update-image-build-workflow"

on:
  workflow_dispatch:
    inputs:
      githubRepo:
        description: "Link of public github repo to deploy"
        required: true

jobs:
  check_if_update_needed:
    permissions:
      contents: "write"

    runs-on: ubuntu-latest
    defaults:
      run:
        shell: bash

    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - id: check_current_state_of_submodule
        name: Add student's repo as a submodule
        run: |
          echo "YEAR=$(date '+%Y')" >> $GITHUB_ENV
          echo "USER_NAME=$(echo "${{ github.event.inputs.githubRepo }}" | cut -d'/' -f4)" >> $GITHUB_ENV
          echo "REPO_NAME=$(echo "${{ github.event.inputs.githubRepo }}" | cut -d'/' -f5)" >> $GITHUB_ENV

          year=$(date '+%Y')
          user_name=$(echo "${{ github.event.inputs.githubRepo }}" | cut -d'/' -f4)
          repo_name=$(echo "${{ github.event.inputs.githubRepo }}" | cut -d'/' -f5)

          if [  -d submissions-${year}/${user_name}-${repo_name} ]; then

            git config --global user.name github-actions
            git config --global user.email github-actions@github.com

            git submodule update --init --recursive

            cd ./submissions-${year}/${user_name}-${repo_name}

            SHA_VALUE="$(git submodule status ./${user_name}-${repo_name} | awk '{print $1}')"

            if [[ ${SHA_VALUE:0:1} == '-' ]]; then
              SHA_VALUE=${SHA_VALUE:1}
            fi

            git submodule update --init --recursive --remote

            NEW_SHA_VALUE="$(git submodule status ./${user_name}-${repo_name} | awk '{print $1}')"

            if [[ ${NEW_SHA_VALUE} == ${SHA_VALUE} ]]; then
              echo "STATUS=$(echo 'failure')" >> $GITHUB_ENV
              echo "No update is needed, skipping the rest of jobs."
            else
              echo "STATUS=$(echo 'success')" >> $GITHUB_ENV
              git add .
              git commit -m "Updated ${user_name}-${repo_name} submodule by github-actions"
              git push
              echo "Pushed the updated submodule to the repository."
            fi
          else
            echo "Submodule does not exist, terminating update-image github actions, please use create-image.yml"
            echo "STATUS=$(echo 'failure')" >> $GITHUB_ENV  
          fi
    outputs:
      status: ${{ env.STATUS }}
      year: ${{ env.YEAR }}
      user_name: ${{ env.USER_NAME }}
      repo_name: ${{ env.REPO_NAME }}

  dockerise-image:
    uses: ./.github/workflows/dockerise-image.yml
    needs: check_if_update_needed
    with:
      user_name: ${{ needs.check_if_update_needed.outputs.user_name }}
      repo_name: ${{ needs.check_if_update_needed.outputs.repo_name }}
      year: ${{ needs.check_if_update_needed.outputs.year }}
      submodule_status: ${{ needs.check_if_update_needed.outputs.status }}
    secrets:
      DEPENDENCY_GRAPH_TOKEN: ${{ secrets.DEPENDENCY_GRAPH_TOKEN }}

  trigger_deployment:
    uses: ./.github/workflows/deploy-image.yml
    needs: dockerise-image
    with:
      user_name: ${{ needs.dockerise-image.outputs.user_name }}
      repo_name: ${{ needs.dockerise-image.outputs.repo_name }}
      year: ${{ needs.dockerise-image.outputs.year }}
      image: ${{ needs.dockerise-image.outputs.image_name }}
