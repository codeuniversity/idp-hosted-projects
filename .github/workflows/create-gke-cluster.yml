name: "Create new GKE cluster"

on:
  workflow_dispatch:
    
jobs:
  create-cluster:
    name: "Terraform create GKE cluster"
    runs-on: ubuntu-latest
    defaults:
      run:
        shell: bash
        working-directory: ./gke-terraform-config
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: "1.8.2"
      - name: Terraform fmt
        id: fmt
        run: terraform fmt -check
        continue-on-error: true
      
      - name: Terraform Init
        id: init
        run: terraform init
      
      - name: Terraform Validate
        id: validate
        run: terraform validate -no-color
      
      - name: Terraform Plan
        id: plan
        env:
          TF_VAR_service_account: terraform-gke@code-idp.iam.gserviceaccount.com
          TF_VAR_project_id: code-idp
          TF_VAR_max_node_count: 3
          TF_VAR_initial_node_count: 1
          TF_VAR_namedotcom_username: "notemann27" # temporary until we use a different domain
          TF_VAR_namedotcom_token: ${{secrets.NAMEDOTCOM_TOKEN}} # temporary until we use a different domain
          TF_VAR_idp_domain_name: "laurinnotemann.dev" # temporary until we use a different domain
          TF_VAR_certificate_issuer_email: "laurin.notemann@gmail.com" # temporary until we use a different domain
        run: terraform plan -no-color

      - name: Terraform apply
        id: apply
        env:
          TF_VAR_service_account: terraform-gke@code-idp.iam.gserviceaccount.com
          TF_VAR_project_id: code-idp
          TF_VAR_max_node_count: 3
          TF_VAR_initial_node_count: 1
          TF_VAR_namedotcom_username: "notemann27" # temporary until we use a different domain
          TF_VAR_namedotcom_token: ${{secrets.NAMEDOTCOM_TOKEN}} # temporary until we use a different domain
          TF_VAR_idp_domain_name: "laurinnotemann.dev" # temporary until we use a different domain
          TF_VAR_certificate_issuer_email: "laurin.notemann@gmail.com" # temporary until we use a different domain
        run: terraform apply -no-color -auto-approve
